#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
# set -x

shopt -s extglob

function error() {
  echo " !     $*" >&2
  exit 1
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function build() {
  echo ----------------------------------------------------------------------
  echo Building $@...
  echo ----------------------------------------------------------------------
  echo
  pushd $1
    ./configure --prefix=$VENDOR_DIR/$2 ${@:3} > /dev/null 2>&1
    echo "configure finished" | indent
    make -j16
    echo "make finished" | indent
    make install > /dev/null 2>&1
    echo "install finished" | indent
    make clean > /dev/null 2>&1
    echo "clean finished" | indent
  popd > /dev/null
  echo
  echo

  # add to libraries and pkg-config
  export LD_LIBRARY_PATH="$VENDOR_DIR/$2/lib:$LD_LIBRARY_PATH"
  export PKG_CONFIG_PATH="$VENDOR_DIR/$2/lib/pkgconfig:$PKG_CONFIG_PATH"

}

function download() {
  if [ ! -f "$2" ]; then
    echo Downloading $2...
    curl $1 -o $2 -s -S
  else
    echo Got $2...
  fi
}
#GSC-20160805
vendordir=/app/vendor
mkdir -p $vendordir
basedir="$( cd -P "$( dirname "$0" )" && pwd )"

# clean up leaking environment
unset GIT_DIR

lsb_release -a
# parse and derive params
BUILD_DIR=$1
CACHE_DIR="$2/vendor"
LP_DIR=`cd $(dirname $0); cd ..; pwd`
BUILDPACK_DIR="$(dirname $(dirname $0))"
# config
BUILD_PACK_VERSION="20160802"

R_VERSION="3.3.1"

R_BINARIES="https://media.githubusercontent.com/media/rddill-IBM/CF_R_Buildpack/master/r_cf_build.tar.gz"
R_SOURCE="http://ftp.osuosl.org/pub/cran/src/base/R-3/R-3.3.1.tar.gz"
F77_INSTALL="http://netlib.sandia.gov/cgi-bin/netlib/netlibfiles.tar?filename=netlib/f2c"

VENDOR_DIR="$BUILD_DIR/vendor"
R_HOME="$VENDOR_DIR/R"

CRAN_MIRROR="http://cran.cnr.berkeley.edu/"
echo "================" |indent
echo "input variable 1 = $1"| indent
echo "input variable 2 = $2"| indent
echo "BUILD_DIR = $BUILD_DIR "| indent
echo "CACHE_DIR = $CACHE_DIR"| indent
echo "LP_DIR = $LP_DIR"| indent
echo "BUILDPACK_DIR = $BUILDPACK_DIR"| indent
echo "BUILD_PACK_VERSION = $BUILD_PACK_VERSION"| indent
echo "R_VERSION = $R_VERSION"| indent
echo "R_BINARIES = $R_BINARIES"| indent
echo "R_SOURCE = $R_SOURCE"| indent
echo "VENDOR_DIR = $VENDOR_DIR"| indent
echo "R_HOME = $R_HOME"| indent
echo "CRAN_MIRROR = $CRAN_MIRROR"| indent

mkdir -p $CACHE_DIR

# vendor R into the slug
echo "Vendoring R $R_VERSION" | indent

# download and unpack binaries



export PATH="$BUILD_DIR/lib:$BUILD_DIR/bin:$PATH"
export LD_LIBRARY_PATH=".:$BUILD_DIR/lib:/lib:/usr/lib:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH"
export LIBRARY_PATH="$BUILD_DIR/lib:/lib:/usr/lib:/usr/lib/x86_64-linux-gnu"

#GSC-20160805

cd ~
vendordir=/app/vendor
mkdir -p $vendordir


echo "PEK77-PWD"
pwd
cd app
cd vendor
which gcc
mkdir "gcc"
#yum -y install gcc gcc-c++ kernel-devel

echo "PEK77-gmp-6.1.1"
wget "https://gmplib.org/download/gmp/gmp-6.1.1.tar.bz2"
tar jxf gmp-6.1.1.tar.bz2
cd gmp-6.1.1
./configure --disable-shared --enable-static --prefix=/home/vcap/app/vendor/gcc
make -j16
#make check
make install
cd ..
ls

echo "PEK77-mpfr-3.1.4"
wget "http://www.mpfr.org/mpfr-current/mpfr-3.1.4.tar.gz"
tar zxf mpfr-3.1.4.tar.gz
cd mpfr-3.1.4
./configure --disable-shared --enable-static --prefix=/home/vcap/app/vendor/gcc --with-gmp=/home/vcap/app/vendor/gcc
make -j16
#make check
make install
cd ..
ls

echo "PEK77-mpc-1.0.3"
wget "https://ftp.gnu.org/gnu/mpc/mpc-1.0.3.tar.gz"
tar zxf mpc-1.0.3.tar.gz
cd mpc-1.0.3
./configure --disable-shared --enable-static --prefix=/home/vcap/app/vendor/gcc --with-gmp=/home/vcap/app/vendor/gcc  --with-mpfr=/home/vcap/app/vendor/gcc
make -j16
#make check
make install
cd ..
ls
export LD_LIBRARY_PATH="/home/vcap/app/vendor/gcc:$LD_LIBRARY_PATH"

echo "PEK77-GCC"
wget "https://ftp.gnu.org/gnu/gcc/gcc-4.9.4/gcc-4.9.4.tar.gz" -O "gcc-4.9.4.tar.gz"
tar zxf gcc-4.9.4.tar.gz
mkdir "gccF"
ls
cd gcc-4.9.4
./configure --prefix=/home/vcap/app/vendor/gccF --disable-shared --disable-bootstrap --disable-libstdcxx-pch --enable-languages=fortran --enable-libgomp --enable-lto --enable-threads=posix --enable-tls --with-gmp=/home/vcap/app/vendor/gcc  --with-mpfr=/home/vcap/app/vendor/gcc --with-mpc=/home/vcap/app/vendor/gcc --with-fpmath=sse --disable-multilib
make -j16
make install
echo "PEK77-gfortran"
/home/vcap/app/vendor/gccF/bin/gfortran --version
echo "=====1111111======"
cd ..
ls


export LIBRARY_PATH="$BUILD_DIR/lib:/lib:/usr/lib:/usr/lib/x86_64-linux-gnu:/home/vcap/app/vendor/gccF/lib64:/home/vcap/app/vendor/gccF/bin:/home/vcap/app/vendor/gccF/lib"
export LD_LIBRARY_PATH="/home/vcap/app/vendor/gccF/lib:/home/vcap/app/vendor/gccF/lib64:/home/vcap/app/vendor/gccF/bin:$LD_LIBRARY_PATH"
export PATH="/home/vcap/app/vendor/gccF/bin:/home/vcap/app/vendor/gccF/bin/gfortran:$PATH"



echo "R-3.3.1"
wget https://cran.r-project.org/src/base/R-3/R-3.3.1.tar.gz
tar R-3.3.1.tar.gz
mkdir R
ls
cd R-3.3.1
./configure --without-pic --disable-shared
cp -R $VENDOR_DIR/R /home/vcap/app/vendor

echo "Stuff copied" | indent
# find /app/vendor/ type -d -print0 | xargs -0 ls -ld
# find /app/vendor/R/ type -d -print0 | xargs -0 ls -ld
# sleep 15

# R needs to know where gfortran and glibc header files are
# export LDFLAGS="-L/app/vendor/gcc/lib64/"
# export CPPFLAGS="-I/app/vendor/glibc/string/ -I/app/vendor/glibc/time -I/usr/include/x86_64-linux-gnu/sys -I/usr/include/x86_64-linux-gnu/gnu"
export R_HOME="/home/vcap/app/vendor/R:$R_HOME"
export R_INCLUDE="$R_HOME/include:$BUILD_DIR/include"
export LD_LIBRARY_PATH="$R_HOME/lib:$LD_LIBRARY_PATH"
export LIBRARY_PATH="$R_HOME/lib:$LIBARY_PATH"
export PATH="/home/vcap/app/vendor/R/bin:$PATH"
echo "PATH =$PATH"| indent

echo "R_HOME =$R_HOME"| indent
echo "R_INCLUDE =$R_INCLUDE"| indent

echo "LIBRARY_PATH =$LIBRARY_PATH"| indent



export CPATH=$R_INCLUDE:/usr/lib/x86_64-linux-gnu

echo "CPATH = $CPATH"| indent


echo "variables set" | indent

# copy over environment
 mkdir -p $BUILD_DIR/.profile.d
 cp "$BUILDPACK_DIR/bin/r_environment.sh" $BUILD_DIR/.profile.d/r_environment.sh
 cat $BUILD_DIR/.profile.d/r_environment.sh

 echo "environment copied" | indent

# prevent warnings
 mkdir -p /app/vendor/R/lib64/R/doc/html
 touch /app/vendor/R/lib64/R/doc/html/R.css


# add ldpaths to existing space

echo "R_HOME points to: $R_HOME"| indent

# install dependencies from CRAN
echo "Executing init.r script" | indent

# set the CRAN mirror and run the init.r program
 R -s --vanilla <<RPROG
   Sys.setenv(BUILD_DIR="$BUILD_DIR")
   print("Sys.setenv complete")
   setwd("$BUILD_DIR")
   print("setwd complete")
   r <- getOption("repos");
   print(r)
   print("setting r complete")
   r["CRAN"] <- "$CRAN_MIRROR";
   print("setting r[CRAN] complete")
   options(repos=r);
   print("options(repos=r) complete")
   `cat $BUILD_DIR/init.r`
   print("cat $BUILD_DIR/init.r complete")
RPROG

#cat indent

echo "R $R_VERSION successfully installed" | indent

# need to copy binaries back so that any installed packages are included in the slug
rm -rf $VENDOR_DIR && mkdir -p $VENDOR_DIR

cp -R /app/vendor/R $VENDOR_DIR/R


